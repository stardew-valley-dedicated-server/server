name: release draft

on:
  push:
    branches:
      - main

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

jobs:
  build:
    # TODO: Does this have "make" installed, or do we have to manually do it?
    runs-on: ubuntu-latest
    env:
      BUNJS_VERSION: "1.1.45"
      DOTNET_VERSION: "6.0.302"
      SMAPI_VERSION: "4.1.10"
      GAME_DEST_DIR: "${{ github.workspace }}/Stardew Valley"

    steps:
      - name: Download sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2


      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup BunJS ${{ env.BUNJS_VERSION }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUNJS_VERSION }}

        # TODO: Cache artifacts
      - name: Install SteamCMD
        run: |
          echo steam steam/question select "I AGREE" | debconf-set-selections && \
          echo steam steam/license note '' | debconf-set-selections && \
          apt-get install -y \
          steamcmd && \
          mv /usr/games/steamcmd /opt/base/bin/ && \
          steamcmd +force_install_dir /data/steam +@sSteamCmdForcePlatformType linux +login anonymous +app_update 1007 +quit && \
          mkdir -p /root/.steam/sdk64 && \
          mv /data/steam/linux64/steamclient.so /root/.steam/sdk64/steamclient.so && \
          rm -rf /data/steam
        shell: bash

        # TODO: Cache artifacts
      - name: Download Stardew Valley
        run: |
          steamcmd +@sSteamCmdForcePlatformType linux \
          +force_install_dir ${GAME_DEST_DIR} \
          +login "${{ secrets.STEAM_USER }}" "${{ secrets.STEAM_PASS }}" \
          +app_update 413150 \
          +quit
        shell: bash

        # TODO: Cache artifacts
      - name: Download SMAPI
        run: |
          curl -L https://github.com/Pathoschild/SMAPI/releases/download/${SMAPI_VERSION}/SMAPI-${SMAPI_VERSION}-installer.zip -o ./smapi.zip
          unzip -q smapi.zip -d ./smapi/
          echo -e "2\n\n" | "./smapi/SMAPI ${SMAPI_VERSION} installer/internal/linux/SMAPI.Installer" \
            --install \
            --game-path "${GAME_DEST_DIR}"
        shell: bash

      - run: |
          bun install --cwd ./.github/actions/update-release-draft
          bun ./.github/update-release-draft/update-release-draft.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and Publish
  #       run: |
  #         make push

  # update:
  #   if: |
  #     github.repository_owner == 'stardew-valley-dedicated-server' && !contains(github.event.head_commit.message, 'v1.')
  #   runs-on: ubuntu-latest

  #   permissions:
  #     pull-requests: write
  #     contents: write

  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
  #       with:
  #         node-version: lts/*
  #         cache: "pnpm"

  #     - name: Install dependencies
  #       run: pnpm install

  #     - run: pnpm jiti ./scripts/update-release-draft.ts
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
